{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\mumfo\\\\Documents\\\\BootCamp\\\\16-Homework\\\\clicky-game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      trackTop: false,\n      play: \"Playing\"\n    };\n\n    this.setScore = clicked => {\n      if (this.state.play !== \"Playing\") {\n        //reset\n        alert(\"resetting\");\n\n        for (let i = 0; i < krustyPals.length; i++) {\n          krustyPals[i].clicked = \"Not CLicked\";\n        }\n\n        this.setState({\n          score: 0\n        });\n        this.setState({\n          play: \"Playing\"\n        });\n      }\n\n      if (krustyPals[clicked - 1].clicked === \"clicked\") {\n        this.setState({\n          response: \"Sorry No, Gave Over!\"\n        });\n        this.setState({\n          play: \"Over\"\n        });\n      } else {\n        krustyPals[clicked - 1].clicked = \"clicked\";\n        this.setState({\n          score: this.state.score + 1\n        }, () => {\n          if (this.state.score >= this.state.topScore) {\n            this.setState({\n              topScore: this.state.score\n            });\n          }\n\n          this.setState({\n            response: \"CORRECT!!! Keep guessing\"\n          });\n        }); //randomize\n\n        let newKrustyPals = [];\n        let used = [];\n        let newPosi = -1;\n\n        while (used.length < this.state.krustyPals.length) {\n          newPosi = Math.floor(Math.random() * 11);\n\n          while (used.indexOf(newPosi) !== -1) {\n            newPosi++;\n            if (newPosi > 11) newPosi = 0;\n          }\n\n          newKrustyPals.push(this.state.krustyPals[newPosi]);\n          used.push(newPosi);\n        }\n\n        this.setState({\n          krustyPals: newKrustyPals\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Header, {\n      response: this.state.response,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), this.state.krustyPals.map(pal => React.createElement(FriendCard, {\n      setScoreCallBack: this.setScore,\n      image: pal.image,\n      clicked: pal.clicked,\n      id: pal.id,\n      name: pal.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\mumfo\\Documents\\BootCamp\\16-Homework\\clicky-game\\clicky\\src\\App.js"],"names":["React","Component","Header","FriendCard","Wrapper","krustyPals","App","state","response","score","topScore","image","trackTop","play","setScore","clicked","alert","i","length","setState","newKrustyPals","used","newPosi","Math","floor","random","indexOf","push","render","map","pal","id","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\n\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\"\n\nclass App extends Component {\n  state = {\n    response: \"Click an image below to begin!\",\n    score: 0,\n    topScore: 0,\n    image: \"\",\n    krustyPals: krustyPals,\n    trackTop: false,\n    play: \"Playing\"\n  };\n\n\n\n  setScore = (clicked) => {\n\n    if (this.state.play !== \"Playing\") {\n      //reset\n      alert(\"resetting\") \n      for (let i = 0; i < krustyPals.length; i++) {\n        krustyPals[i].clicked = \"Not CLicked\";\n      }\n      this.setState({ score: 0 });\n      this.setState({ play: \"Playing\" });\n    }\n\n    if (krustyPals[clicked - 1].clicked === \"clicked\") {\n      this.setState({ response: \"Sorry No, Gave Over!\" })\n      this.setState({ play: \"Over\" })\n    } else {\n      krustyPals[clicked - 1].clicked = \"clicked\"\n      this.setState({ score: this.state.score + 1 }, () => {\n        if (this.state.score >= this.state.topScore) {\n          this.setState({ topScore: this.state.score });\n        }\n        this.setState({ response: \"CORRECT!!! Keep guessing\" })\n      });\n      //randomize\n      let newKrustyPals = [];\n      let used = [];\n      let newPosi = -1;\n      while (used.length < this.state.krustyPals.length) {\n        newPosi = Math.floor(Math.random() * 11);\n        while (used.indexOf(newPosi) !== -1) {\n          newPosi++;\n          if (newPosi > 11) newPosi = 0;\n        }\n        newKrustyPals.push(this.state.krustyPals[newPosi]);\n        used.push(newPosi);\n      }\n      this.setState({ krustyPals: newKrustyPals });\n    }\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Header response={this.state.response} score={this.state.score} topScore={this.state.topScore} />\n        {this.state.krustyPals.map(pal => (\n          <FriendCard\n            setScoreCallBack={this.setScore}\n            image={pal.image}\n            clicked={pal.clicked}\n            id={pal.id}\n            name={pal.name}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}