{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\mumfo\\\\Documents\\\\BootCamp\\\\16-Homework\\\\clicky-game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.initialState;\n\n    this.setScore = clicked => {\n      if (this.state.play !== \"Playing\") {\n        //reset\n        // this.setState({ score: 0 });\n        this.resetBuilder(); // this.setState({ play: \"Playing\" });\n\n        for (let i = 0; i < krustyPals.length; i++) {\n          krustyPals[i].clicked = \"Not CLicked\";\n        }\n      }\n\n      if (krustyPals[clicked - 1].clicked === \"clicked\") {\n        this.setState({\n          response: \"Sorry No, Gave Over!\"\n        });\n        this.setState({\n          play: \"Over\"\n        });\n      } else {\n        krustyPals[clicked - 1].clicked = \"clicked\";\n        this.setState({\n          score: this.state.score + 1\n        }, () => {\n          if (this.state.score >= this.state.topScore) {\n            this.setState({\n              topScore: this.state.score\n            });\n          }\n\n          this.setState({\n            response: \"CORRECT!!! Keep guessing\"\n          });\n        }); //randomize\n\n        let newKrustyPals = [];\n        let used = [];\n        let newPosi = -1;\n\n        while (used.length < this.state.krustyPals.length) {\n          newPosi = Math.floor(Math.random() * 11);\n\n          while (used.indexOf(newPosi) !== -1) {\n            newPosi++;\n            if (newPosi > 11) newPosi = 0;\n          }\n\n          newKrustyPals.push(this.state.krustyPals[newPosi]);\n          used.push(newPosi);\n        }\n\n        this.setState({\n          krustyPals: newKrustyPals\n        });\n      }\n    };\n  }\n\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      trackTop: false,\n      play: \"Playing\"\n    };\n  } // state = {\n  //   response: \"Click an image below to begin!\",\n  //   score: 0,\n  //   topScore: 0,\n  //   image: \"\",\n  //   krustyPals: krustyPals,\n  //   trackTop: false,\n  //   play: \"Playing\"\n  // };\n\n\n  resetBuilder() {\n    let tempTopScore = this.state.topScore;\n    this.setState(this.initialState);\n    this.setState({\n      topScore: tempTopScore\n    }); //for (let i = 0; i < krustyPals.length; i++) {\n    //  krustyPals[i].clicked = \"Not CLicked\";\n    //}      \n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Header, {\n      response: this.state.response,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.state.krustyPals.map(pal => React.createElement(FriendCard, {\n      setScoreCallBack: this.setScore,\n      image: pal.image,\n      clicked: pal.clicked,\n      id: pal.id,\n      name: pal.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\mumfo\\Documents\\BootCamp\\16-Homework\\clicky-game\\clicky\\src\\App.js"],"names":["React","Component","Header","FriendCard","Wrapper","krustyPals","App","state","initialState","setScore","clicked","play","resetBuilder","i","length","setState","response","score","topScore","newKrustyPals","used","newPosi","Math","floor","random","indexOf","push","image","trackTop","tempTopScore","render","map","pal","id","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\n\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\"\n\nclass App extends Component {\n  \n  state = this.initialState;\n  get initialState(){\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      trackTop: false,\n      play: \"Playing\"\n      }\n  }\n  \n  // state = {\n  //   response: \"Click an image below to begin!\",\n  //   score: 0,\n  //   topScore: 0,\n  //   image: \"\",\n  //   krustyPals: krustyPals,\n  //   trackTop: false,\n  //   play: \"Playing\"\n  // };\n\n    resetBuilder(){\n      let tempTopScore = this.state.topScore;\n      this.setState(this.initialState);\n      this.setState({topScore: tempTopScore});\n      //for (let i = 0; i < krustyPals.length; i++) {\n      //  krustyPals[i].clicked = \"Not CLicked\";\n      //}      \n    }\n\n\n  setScore = (clicked) => {\n\n    if (this.state.play !== \"Playing\") {\n      //reset\n      // this.setState({ score: 0 });\n      this.resetBuilder();\n      // this.setState({ play: \"Playing\" });\n      for (let i = 0; i < krustyPals.length; i++) {\n        krustyPals[i].clicked = \"Not CLicked\";\n      }      \n      \n    }\n\n    if (krustyPals[clicked - 1].clicked === \"clicked\") {\n      this.setState({ response: \"Sorry No, Gave Over!\" })\n      this.setState({ play: \"Over\" })\n    } else {\n      krustyPals[clicked - 1].clicked = \"clicked\"\n      this.setState({ score: this.state.score + 1 }, () => {\n        if (this.state.score >= this.state.topScore) {\n          this.setState({ topScore: this.state.score });\n        }\n        this.setState({ response: \"CORRECT!!! Keep guessing\" })\n      });\n      //randomize\n      let newKrustyPals = [];\n      let used = [];\n      let newPosi = -1;\n      while (used.length < this.state.krustyPals.length) {\n        newPosi = Math.floor(Math.random() * 11);\n        while (used.indexOf(newPosi) !== -1) {\n          newPosi++;\n          if (newPosi > 11) newPosi = 0;\n        }\n        newKrustyPals.push(this.state.krustyPals[newPosi]);\n        used.push(newPosi);\n      }\n      this.setState({ krustyPals: newKrustyPals });\n    }\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Header response={this.state.response} score={this.state.score} topScore={this.state.topScore} />\n        {this.state.krustyPals.map(pal => (\n          <FriendCard\n            setScoreCallBack={this.setScore}\n            image={pal.image}\n            clicked={pal.clicked}\n            id={pal.id}\n            name={pal.name}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}