{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mumfo\\\\Documents\\\\BootCamp\\\\16-Homework\\\\clicky-game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.initialState;\n\n    this.setScore = clicked => {\n      if (this.state.play !== \"Playing\") {\n        this.resetBuilder();\n      } else {\n        if (krustyPals[clicked - 1].clicked === \"clicked\") {\n          this.setState({\n            response: \"Sorry No, Gave Over!\"\n          });\n          this.setState({\n            play: \"Over\"\n          });\n        } else {\n          krustyPals[clicked - 1].clicked = \"clicked\";\n          this.setState({\n            score: this.state.score + 1\n          }, () => {\n            if (this.state.score >= this.state.topScore) {\n              this.setState({\n                topScore: this.state.score\n              });\n            }\n\n            this.setState({\n              response: \"CORRECT!!! Keep guessing\"\n            });\n          }); //randomize\n\n          let newKrustyPals = [];\n          let used = [];\n          let newPosi = -1;\n\n          while (used.length < this.state.krustyPals.length) {\n            newPosi = Math.floor(Math.random() * 11);\n\n            while (used.indexOf(newPosi) !== -1) {\n              newPosi++;\n              if (newPosi > 11) newPosi = 0;\n            }\n\n            newKrustyPals.push(this.state.krustyPals[newPosi]);\n            used.push(newPosi);\n          }\n\n          this.setState({\n            krustyPals: newKrustyPals\n          });\n        }\n      }\n    };\n  }\n\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      trackTop: false,\n      play: \"Playing\"\n    };\n  }\n\n  resetBuilder() {\n    let tempTopScore = this.state.topScore;\n    this.setState(this.initialState);\n    this.setState({\n      topScore: tempTopScore\n    });\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Header, {\n      response: this.state.response,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), this.state.krustyPals.map(pal => React.createElement(FriendCard, {\n      setScoreCallBack: this.setScore,\n      image: pal.image,\n      clicked: pal.clicked,\n      id: pal.id,\n      name: pal.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mumfo\\Documents\\BootCamp\\16-Homework\\clicky-game\\clicky\\src\\App.js"],"names":["React","Component","Header","FriendCard","Wrapper","krustyPals","App","state","initialState","setScore","clicked","play","resetBuilder","setState","response","score","topScore","newKrustyPals","used","newPosi","length","Math","floor","random","indexOf","push","image","trackTop","tempTopScore","render","map","pal","id","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\n\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\"\n\nclass App extends Component {\n  \n  state = this.initialState;\n  get initialState(){\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      trackTop: false,\n      play: \"Playing\"\n      }\n  }\n\n    resetBuilder(){\n      let tempTopScore = this.state.topScore;\n      this.setState(this.initialState);\n      this.setState({topScore: tempTopScore});\n    }\n\n\n  setScore = (clicked) => {\n\n    if (this.state.play !== \"Playing\") {\n      this.resetBuilder();      \n    } else {\n\n    if (krustyPals[clicked - 1].clicked === \"clicked\") {\n      this.setState({ response: \"Sorry No, Gave Over!\" })\n      this.setState({ play: \"Over\" })\n    } else {\n      krustyPals[clicked - 1].clicked = \"clicked\"\n      this.setState({ score: this.state.score + 1 }, () => {\n        if (this.state.score >= this.state.topScore) {\n          this.setState({ topScore: this.state.score });\n        }\n        this.setState({ response: \"CORRECT!!! Keep guessing\" })\n      });\n      //randomize\n      let newKrustyPals = [];\n      let used = [];\n      let newPosi = -1;\n      while (used.length < this.state.krustyPals.length) {\n        newPosi = Math.floor(Math.random() * 11);\n        while (used.indexOf(newPosi) !== -1) {\n          newPosi++;\n          if (newPosi > 11) newPosi = 0;\n        }\n        newKrustyPals.push(this.state.krustyPals[newPosi]);\n        used.push(newPosi);\n      }\n      this.setState({ krustyPals: newKrustyPals });\n    }\n  }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header response={this.state.response} score={this.state.score} topScore={this.state.topScore} />\n        {this.state.krustyPals.map(pal => (\n          <FriendCard\n            setScoreCallBack={this.setScore}\n            image={pal.image}\n            clicked={pal.clicked}\n            id={pal.id}\n            name={pal.name}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}