{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mumfo\\\\Documents\\\\BootCamp\\\\16-Homework\\\\clicky-game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.initialState;\n\n    this.setScore = clicked => {\n      if (this.state.play !== \"Playing\") {\n        this.resetBuilder();\n      } else {\n        if (this.state.clicked[clicked - 1] === \"clicked\") {\n          this.setState({\n            response: \"Sorry No, Gave Over!\"\n          });\n          this.setState({\n            play: \"Over\"\n          });\n        } else {\n          let clickedArr = this.state.clicked;\n          clickedArr[clicked - 1] = \"clicked\";\n          this.setState({\n            score: this.state.score + 1\n          }, () => {\n            if (this.state.score >= this.state.topScore) {\n              this.setState({\n                topScore: this.state.score\n              });\n            }\n\n            this.setState({\n              response: \"CORRECT!!! Keep guessing\"\n            });\n          }); //randomize\n\n          let newKrustyPals = [];\n          let used = [];\n          let newPosi = -1;\n\n          while (used.length < this.state.krustyPals.length) {\n            newPosi = Math.floor(Math.random() * 11);\n\n            while (used.indexOf(newPosi) !== -1) {\n              newPosi++;\n              if (newPosi > 11) newPosi = 0;\n            }\n\n            newKrustyPals.push(this.state.krustyPals[newPosi]);\n            used.push(newPosi);\n          }\n\n          this.setState({\n            krustyPals: newKrustyPals\n          });\n        }\n      }\n    };\n  }\n\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      clicked: [\"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\"],\n      play: \"Playing\"\n    };\n  }\n\n  resetBuilder() {\n    let tempTopScore = this.state.topScore;\n    this.setState(this.initialState);\n    this.setState({\n      topScore: tempTopScore\n    });\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      response: this.state.response,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), this.state.krustyPals.map(pal => React.createElement(FriendCard, {\n      setScoreCallBack: this.setScore,\n      image: pal.image,\n      clicked: pal.clicked,\n      id: pal.id,\n      name: pal.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mumfo\\Documents\\BootCamp\\16-Homework\\clicky-game\\clicky\\src\\App.js"],"names":["React","Component","Header","FriendCard","Wrapper","krustyPals","App","state","initialState","setScore","clicked","play","resetBuilder","setState","response","clickedArr","score","topScore","newKrustyPals","used","newPosi","length","Math","floor","random","indexOf","push","image","tempTopScore","render","map","pal","id","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\n\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\"\n\nclass App extends Component {\n\n  state = this.initialState;\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      clicked: [\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\"],\n      play: \"Playing\"\n    }\n  }\n\n  resetBuilder() {\n    let tempTopScore = this.state.topScore;\n    this.setState(this.initialState);\n    this.setState({ topScore: tempTopScore });\n  }\n\n\n  setScore = (clicked) => {\n\n    if (this.state.play !== \"Playing\") {\n      this.resetBuilder();\n    } else {\n\n      if (this.state.clicked[clicked - 1] === \"clicked\") {\n        this.setState({ response: \"Sorry No, Gave Over!\" })\n        this.setState({ play: \"Over\" })\n      } else {\n        let clickedArr = this.state.clicked;\n        clickedArr[clicked - 1] = \"clicked\"\n        this.setState({ score: this.state.score + 1 }, () => {\n          if (this.state.score >= this.state.topScore) {\n            this.setState({ topScore: this.state.score });\n          }\n          this.setState({ response: \"CORRECT!!! Keep guessing\" })\n        });\n        //randomize\n        let newKrustyPals = [];\n        let used = [];\n        let newPosi = -1;\n        while (used.length < this.state.krustyPals.length) {\n          newPosi = Math.floor(Math.random() * 11);\n          while (used.indexOf(newPosi) !== -1) {\n            newPosi++;\n            if (newPosi > 11) newPosi = 0;\n          }\n          newKrustyPals.push(this.state.krustyPals[newPosi]);\n          used.push(newPosi);\n        }\n        this.setState({ krustyPals: newKrustyPals });\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header response={this.state.response} score={this.state.score} topScore={this.state.topScore} />\n        {this.state.krustyPals.map(pal => (\n          <FriendCard\n            setScoreCallBack={this.setScore}\n            image={pal.image}\n            clicked={pal.clicked}\n            id={pal.id}\n            name={pal.name}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}