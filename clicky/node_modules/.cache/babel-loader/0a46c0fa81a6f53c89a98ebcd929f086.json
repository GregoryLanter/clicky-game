{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mumfo\\\\Documents\\\\BootCamp\\\\16-Homework\\\\clicky-game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.initialState;\n\n    this.setScore = clicked => {\n      if (this.state.play !== \"Playing\") {\n        let tempTopScore = this.state.topScore;\n        this.resetBuilder(); //      this.resetClicked();\n\n        this.setState({\n          topScore: tempTopScore,\n          response: \"Click an image to begin!\"\n        });\n      } else {\n        if (this.state.clicked[clicked - 1] === \"Clicked\") {\n          this.setState({\n            response: \"Sorry No, Gave Over!\"\n          });\n          this.setState({\n            play: \"Over\"\n          });\n        } else {\n          let newPalObj = this.state.krustyPals;\n          let newClickedArr = this.state.clicked;\n\n          for (let pal = 0; pal < 12; pal++) {\n            if (pal === clicked - 1) {\n              newPalObj[pal].clicked = \"Clicked\";\n              newClickedArr[pal] = \"Clicked\";\n            } else {\n              newPalObj[pal].clicked = this.state.clicked[newPalObj[pal].id - 1];\n            }\n          }\n\n          this.setState({\n            display: newPalObj\n          });\n          this.setState({\n            clicked: newClickedArr\n          });\n          this.setState({\n            score: this.state.score + 1\n          }, () => {\n            if (this.state.score >= this.state.topScore) {\n              this.setState({\n                topScore: this.state.score\n              });\n\n              if (this.state.score === 12) {\n                console.log(\"Winner\");\n                this.setState({\n                  response: \"YOU WIN!!!\"\n                }, () => {\n                  play: \"Over\";\n                });\n              }\n            }\n\n            this.setState({\n              response: \"CORRECT!!! Keep guessing\"\n            });\n          }); //randomize\n\n          let newDisplay = [];\n          let used = [];\n          let newPosi = -1;\n\n          while (used.length < this.state.display.length) {\n            newPosi = Math.floor(Math.random() * 11);\n\n            while (used.indexOf(newPosi) !== -1) {\n              newPosi++;\n              if (newPosi > 11) newPosi = 0;\n            }\n\n            newDisplay.push(this.state.display[newPosi]);\n            used.push(newPosi);\n          }\n\n          this.setState({\n            display: newDisplay\n          });\n        }\n      }\n    };\n  }\n\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      krustyPals: krustyPals,\n      display: krustyPals,\n      clicked: [\"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\"],\n      play: \"Playing\"\n    };\n  }\n\n  resetBuilder() {\n    this.setState(this.initialState);\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Header, {\n      response: this.state.response,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), this.state.display.map(pal => React.createElement(FriendCard, {\n      setScoreCallBack: this.setScore,\n      image: pal.image,\n      clicked: pal.clicked,\n      id: pal.id,\n      name: pal.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\mumfo\\Documents\\BootCamp\\16-Homework\\clicky-game\\clicky\\src\\App.js"],"names":["React","Component","Header","FriendCard","Wrapper","krustyPals","App","state","initialState","setScore","clicked","play","tempTopScore","topScore","resetBuilder","setState","response","newPalObj","newClickedArr","pal","id","display","score","console","log","newDisplay","used","newPosi","length","Math","floor","random","indexOf","push","render","map","image","name"],"mappings":"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","sourcesContent":["  import React, { Component } from \"react\";\n  import Header from \"./components/Header\";\n  \n  import './App.css';\n  import FriendCard from \"./components/FriendCard\";\n  import Wrapper from \"./components/Wrapper\";\n  import krustyPals from \"./krustyPals.json\"\n  \n  class App extends Component {\n  \n    state = this.initialState;\n    get initialState() {\n      return {\n        response: \"Click an image below to begin!\",\n        score: 0,\n        topScore: 0,\n        krustyPals: krustyPals,\n        display: krustyPals,\n        clicked: [\"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\"],\n        play: \"Playing\"\n      }\n    }\n  \n    resetBuilder() {\n      this.setState(this.initialState);\n    }\n  \n  \n    setScore = (clicked) => {\n  \n      if (this.state.play !== \"Playing\") {\n        let tempTopScore = this.state.topScore;\n        this.resetBuilder();\n        //      this.resetClicked();\n        this.setState({ topScore: tempTopScore, response: \"Click an image to begin!\" });\n      } else {\n  \n        if (this.state.clicked[clicked - 1] === \"Clicked\") {\n          this.setState({ response: \"Sorry No, Gave Over!\" })\n          this.setState({ play: \"Over\" })\n        } else {\n          let newPalObj = this.state.krustyPals;\n          let newClickedArr = this.state.clicked;\n          for (let pal = 0; pal < 12; pal++) {\n            if (pal === (clicked - 1)) {\n              newPalObj[pal].clicked = \"Clicked\";\n              newClickedArr[pal] = \"Clicked\"\n            } else {\n              newPalObj[pal].clicked = this.state.clicked[newPalObj[pal].id - 1];\n            }\n          }\n          this.setState({ display: newPalObj });\n          this.setState({ clicked: newClickedArr });\n  \n          this.setState({ score: this.state.score + 1 }, () => {\n            if (this.state.score >= this.state.topScore) {\n              this.setState({ topScore: this.state.score });\n              if(this.state.score === 12){\n                console.log(\"Winner\");\n                this.setState({response: \"YOU WIN!!!\"}, () =>{play: \"Over\"});\n              }    \n            }\n            this.setState({ response: \"CORRECT!!! Keep guessing\" });\n          });\n\n\n          //randomize\n          let newDisplay = [];\n          let used = [];\n          let newPosi = -1;\n          while (used.length < this.state.display.length) {\n            newPosi = Math.floor(Math.random() * 11);\n            while (used.indexOf(newPosi) !== -1) {\n              newPosi++;\n              if (newPosi > 11) newPosi = 0;\n            }\n            newDisplay.push(this.state.display[newPosi]);\n            used.push(newPosi);\n          }\n          this.setState({ display: newDisplay });\n        }\n      }\n    }\n  \n  \n    render() {\n      return (\n        <Wrapper>\n          <Header response={this.state.response} score={this.state.score} topScore={this.state.topScore} />\n          {this.state.display.map(pal => (\n            <FriendCard\n              setScoreCallBack={this.setScore}\n              image={pal.image}\n              clicked={pal.clicked}\n              id={pal.id}\n              name={pal.name}\n            />\n          ))}\n        </Wrapper>\n      );\n    }\n  }\n  \n  export default App;\n  \n"]},"metadata":{},"sourceType":"module"}