{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\mumfo\\\\Documents\\\\BootCamp\\\\16-Homework\\\\clicky-game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.initialState;\n\n    this.setScore = clicked => {\n      if (this.state.play !== \"Playing\") {\n        this.resetBuilder();\n      }\n\n      if (krustyPals[clicked - 1].clicked === \"clicked\") {\n        this.setState({\n          response: \"Sorry No, Gave Over!\"\n        });\n        this.setState({\n          play: \"Over\"\n        });\n      } else {\n        alert(\"calling updated clicked with \" + (clicked - 1));\n        this.updateClicked(clicked - 1, \"Clicked\");\n        this.setState({\n          score: this.state.score + 1\n        }, () => {\n          if (this.state.score >= this.state.topScore) {\n            this.setState({\n              topScore: this.state.score\n            });\n          }\n\n          this.setState({\n            response: \"CORRECT!!! Keep guessing\"\n          });\n        }); //randomize\n\n        let newKrustyPals = [];\n        let used = [];\n        let newPosi = -1;\n\n        while (used.length < this.state.krustyPals.length) {\n          newPosi = Math.floor(Math.random() * 11);\n\n          while (used.indexOf(newPosi) !== -1) {\n            newPosi++;\n            if (newPosi > 11) newPosi = 0;\n          }\n\n          newKrustyPals.push(this.state.krustyPals[newPosi]);\n          used.push(newPosi);\n        }\n\n        this.setState({\n          krustyPals: newKrustyPals\n        });\n      }\n    };\n  }\n\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      trackTop: false,\n      play: \"Playing\"\n    };\n  }\n\n  resetBuilder() {\n    let tempTopScore = this.state.topScore;\n    this.setState(this.initialState);\n    this.setState({\n      topScore: tempTopScore\n    });\n  }\n\n  updateClicked(id, itemAttributes) {\n    alert(\"update Clicked clled\");\n    alert(\"id \" + id);\n    alert(\"itemAttributes \" + itemAttributes);\n    var index = this.state.krustyPals.findIndex(x => x.id === id);\n\n    if (index === -1) {// handle error\n    } else {\n      alert(\"My index is \" + index);\n      this.setState({\n        krustyPals: [this.state.krustyPals.slice(0, index), Object.assign({}, this.state.krustyPals[index].clicked, itemAttributes), this.state.krustyPals.slice(index + 1)]\n      });\n    }\n  }\n\n  resetClicked() {\n    for (let i = 0; i < this.state.krustyPals.length; i++) {\n      this.updateClicked(i, \"Not Clicked\");\n    }\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Header, {\n      response: this.state.response,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.state.krustyPals.map(pal => React.createElement(FriendCard, {\n      setScoreCallBack: this.setScore,\n      image: pal.image,\n      clicked: pal.clicked,\n      id: pal.id,\n      name: pal.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\mumfo\\Documents\\BootCamp\\16-Homework\\clicky-game\\clicky\\src\\App.js"],"names":["React","Component","Header","FriendCard","Wrapper","krustyPals","App","state","initialState","setScore","clicked","play","resetBuilder","setState","response","alert","updateClicked","score","topScore","newKrustyPals","used","newPosi","length","Math","floor","random","indexOf","push","image","trackTop","tempTopScore","id","itemAttributes","index","findIndex","x","slice","Object","assign","resetClicked","i","render","map","pal","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\n\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\"\n\nclass App extends Component {\n\n  state = this.initialState;\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      image: \"\",\n      krustyPals: krustyPals,\n      trackTop: false,\n      play: \"Playing\"\n    }\n  }\n\n  resetBuilder() {\n    let tempTopScore = this.state.topScore;\n    this.setState(this.initialState);\n    this.setState({ topScore: tempTopScore });\n  }\n\n  updateClicked(id, itemAttributes) {\n    alert(\"update Clicked clled\");\n    alert(\"id \"+ id);\n    alert(\"itemAttributes \"+ itemAttributes);\n    \n    var index = this.state.krustyPals.findIndex(x => x.id === id);\n    if (index === -1) {\n      // handle error\n    } else {\n      alert(\"My index is \" + index);\n      this.setState({\n        krustyPals: [\n          this.state.krustyPals.slice(0, index),\n          Object.assign({}, this.state.krustyPals[index].clicked, itemAttributes),\n          this.state.krustyPals.slice(index + 1)\n        ]\n      });\n    }\n  }\n\n  resetClicked() {\n    for (let i = 0; i < this.state.krustyPals.length; i++) {\n      this.updateClicked(i, \"Not Clicked\");\n    }\n  }\n\n  setScore = (clicked) => {\n\n    if (this.state.play !== \"Playing\") {\n      this.resetBuilder();\n    }\n\n    if (krustyPals[clicked - 1].clicked === \"clicked\") {\n      this.setState({ response: \"Sorry No, Gave Over!\" })\n      this.setState({ play: \"Over\" })\n    } else {\n      alert(\"calling updated clicked with \" + (clicked-1));\n      this.updateClicked((clicked - 1), \"Clicked\");\n      this.setState({ score: this.state.score + 1 }, () => {\n        if (this.state.score >= this.state.topScore) {\n          this.setState({ topScore: this.state.score });\n        }\n        this.setState({ response: \"CORRECT!!! Keep guessing\" })\n      });\n      //randomize\n      let newKrustyPals = [];\n      let used = [];\n      let newPosi = -1;\n      while (used.length < this.state.krustyPals.length) {\n        newPosi = Math.floor(Math.random() * 11);\n        while (used.indexOf(newPosi) !== -1) {\n          newPosi++;\n          if (newPosi > 11) newPosi = 0;\n        }\n        newKrustyPals.push(this.state.krustyPals[newPosi]);\n        used.push(newPosi);\n      }\n      this.setState({ krustyPals: newKrustyPals });\n    }\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Header response={this.state.response} score={this.state.score} topScore={this.state.topScore} />\n        {this.state.krustyPals.map(pal => (\n          <FriendCard\n            setScoreCallBack={this.setScore}\n            image={pal.image}\n            clicked={pal.clicked}\n            id={pal.id}\n            name={pal.name}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}