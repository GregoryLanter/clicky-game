{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\mumfo\\\\Documents\\\\BootCamp\\\\16-Homework\\\\clicky-game\\\\clicky\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = this.initialState;\n\n    this.setScore = clicked => {\n      if (this.state.play !== \"Playing\") {\n        let tempTopScore = this.state.topScore;\n        this.resetBuilder(); //      this.resetClicked();\n\n        this.setState({\n          foo: \"one\"\n        }, () => {\n          this.setState({\n            bar: \"two\"\n          });\n        });\n        this.setState({\n          topScore: tempTopScore,\n          response: \"Click an image to begin!\"\n        }, () => {\n          console.log(this.state);\n        });\n      }\n\n      if (this.state.clicked[clicked - 1] === \"Clicked\") {\n        this.setState({\n          response: \"Sorry No, Gave Over!\"\n        });\n        this.setState({\n          play: \"Over\"\n        });\n      } else {\n        let newPalObj = this.state.krustyPals;\n        let newClickedArr = this.state.clicked;\n\n        for (let pal = 0; pal < 12; pal++) {\n          if (pal === clicked - 1) {\n            newPalObj[pal].clicked = \"Clicked\";\n            newClickedArr[pal] = \"Clicked\";\n          } else {\n            newPalObj[pal].clicked = this.state.clicked[newPalObj[pal].id - 1];\n          }\n        }\n\n        this.setState({\n          display: newPalObj\n        });\n        this.setState({\n          clicked: newClickedArr\n        });\n        this.setState({\n          score: this.state.score + 1\n        }, () => {\n          if (this.state.score >= this.state.topScore) {\n            this.setState({\n              topScore: this.state.score\n            });\n          }\n\n          this.setState({\n            response: \"CORRECT!!! Keep guessing\"\n          });\n        }); //randomize\n\n        let newDisplay = [];\n        let used = [];\n        let newPosi = -1;\n\n        while (used.length < this.state.display.length) {\n          newPosi = Math.floor(Math.random() * 11);\n\n          while (used.indexOf(newPosi) !== -1) {\n            newPosi++;\n            if (newPosi > 11) newPosi = 0;\n          }\n\n          newDisplay.push(this.state.display[newPosi]);\n          used.push(newPosi);\n        }\n\n        this.setState({\n          display: newDisplay\n        });\n      }\n    };\n  }\n\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      krustyPals: krustyPals,\n      display: krustyPals,\n      clicked: [\"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\", \"Not Clicked\"],\n      play: \"Playing\"\n    };\n  }\n\n  resetBuilder() {\n    this.setState(this.initialState);\n  }\n  /*  resetClicked() {\n      let newClickedArr = this.state.clicked;\n      for (let i = 0; i < this.state.krustyPals.length; i++) {\n        newClickedArr[i] = \"Not Clicked\"\n      }\n      this.setState({clicked: newClickedArr});\n    }*/\n\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Header, {\n      response: this.state.response,\n      score: this.state.score,\n      topScore: this.state.topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), this.state.display.map(pal => React.createElement(FriendCard, {\n      setScoreCallBack: this.setScore,\n      image: pal.image,\n      clicked: pal.clicked,\n      id: pal.id,\n      name: pal.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:\\Users\\mumfo\\Documents\\BootCamp\\16-Homework\\clicky-game\\clicky\\src\\App.js"],"names":["React","Component","Header","FriendCard","Wrapper","krustyPals","App","state","initialState","setScore","clicked","play","tempTopScore","topScore","resetBuilder","setState","foo","bar","response","console","log","newPalObj","newClickedArr","pal","id","display","score","newDisplay","used","newPosi","length","Math","floor","random","indexOf","push","render","map","image","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\n\nimport './App.css';\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport krustyPals from \"./krustyPals.json\"\n\nclass App extends Component {\n\n  state = this.initialState;\n  get initialState() {\n    return {\n      response: \"Click an image below to begin!\",\n      score: 0,\n      topScore: 0,\n      krustyPals: krustyPals,\n      display:krustyPals,\n      clicked:[\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\",\"Not Clicked\"],\n      play: \"Playing\"\n    }\n  }\n\n  resetBuilder() {\n    this.setState(this.initialState);\n  }\n\n/*  resetClicked() {\n    let newClickedArr = this.state.clicked;\n    for (let i = 0; i < this.state.krustyPals.length; i++) {\n      newClickedArr[i] = \"Not Clicked\"\n    }\n    this.setState({clicked: newClickedArr});\n  }*/\n\n  setScore = (clicked) => {\n\n    if (this.state.play !== \"Playing\") {\n      let tempTopScore = this.state.topScore;\n      this.resetBuilder();\n//      this.resetClicked();\n      this.setState({foo: \"one\"}, () => {\n        this.setState({bar: \"two\"});\n      });\n      this.setState({ topScore: tempTopScore, response: \"Click an image to begin!\"}, () => {\n        console.log(this.state)\n      });\n    }\n\n    if (this.state.clicked[clicked-1] === \"Clicked\") {\n      this.setState({ response: \"Sorry No, Gave Over!\" })\n      this.setState({ play: \"Over\" })\n    } else {\n      let newPalObj = this.state.krustyPals;\n      let newClickedArr = this.state.clicked;\n      for(let pal = 0; pal < 12; pal++){\n        if(pal === (clicked-1)){\n          newPalObj[pal].clicked = \"Clicked\";\n          newClickedArr[pal] = \"Clicked\"\n        } else {\n          newPalObj[pal].clicked = this.state.clicked[newPalObj[pal].id-1];  \n        }\n      }\n      this.setState({display: newPalObj});\n      this.setState({clicked: newClickedArr});\n\n      this.setState({ score: this.state.score + 1 }, () => {\n        if (this.state.score >= this.state.topScore) {\n          this.setState({ topScore: this.state.score });\n        }\n        this.setState({ response: \"CORRECT!!! Keep guessing\" });\n      });\n      //randomize\n      let newDisplay = [];\n      let used = [];\n      let newPosi = -1;\n      while (used.length < this.state.display.length) {\n        newPosi = Math.floor(Math.random() * 11);\n        while (used.indexOf(newPosi) !== -1) {\n          newPosi++;\n          if (newPosi > 11) newPosi = 0;\n        }\n        newDisplay.push(this.state.display[newPosi]);\n        used.push(newPosi);\n      }\n      this.setState({ display: newDisplay });\n    }\n  }\n\n\n  render() {\n    return (\n      <Wrapper>\n        <Header response={this.state.response} score={this.state.score} topScore={this.state.topScore} />\n        {this.state.display.map(pal => (\n          <FriendCard\n            setScoreCallBack={this.setScore}\n            image={pal.image}\n            clicked={pal.clicked}\n            id={pal.id}\n            name={pal.name}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}